version: 2.1


executors:
  docker-publisher:
    environment:
      IMAGE_NAME: asubair/api-tests
    docker:
      - image: circleci/buildpack-deps:stretch
orbs:
  slack: circleci/slack@3.4.2

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME

  run docker:
    machine: true
    steps:
      - run:
          name: Run docker
          command: |
            docker pull asubair/api-tests
            docker run asubair/api-tests

      

      - slack/status:
          mentions: "QA" # Optional: Enter the Slack IDs of any user or group (sub_team) to be mentioned
          fail_only: true # Optional: if set to `true` then only failure messages will occur.
          webhook: "$WEBHOOK_URL" # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK
          failure_message: "API Tests have failed"
          only_for_branches: "main"        

workflows:
  version: 2.1
  build-master:
    triggers:
      - schedule:
          cron: "0,10,20,30,40 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: main
      - run docker:
          requires:
            - publish-latest
          filters:
            branches:
              only: main
     
